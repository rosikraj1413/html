import React, { useState } from "react";
import axios from "axios";
import { useNavigate } from "react-router-dom";
import { Alert, Button, CardActions, CardContent, Divider, TextField } from "@mui/material";
import RefreshIcon from "@mui/icons-material/Refresh";

const Login = () => {
    const navigate = useNavigate();

    // State variables for user login
    const [username, setusername] = useState("");
    const [password, setPassword] = useState("");

    // State variables for vendor login
    const [vendorname, setVendorname] = useState("");
    const [vendorpassword, setVendorPassword] = useState("");

    // State variables for admin login
    const [adminname, setadminname] = useState("");
    const [adminpassword, setadminPassword] = useState("");

    // State variables for Captcha
    const [captcha, setCaptcha] = useState(Math.random().toString(36).slice(8));
    const [captchaText, setCaptchaText] = useState("");
    const [isCaptchaValid, setIsCaptchaValid] = useState(false);
    const [isCaptchaSuccess, setIsCaptchaSuccess] = useState(false);

    // Refresh Captcha
    const refreshCaptcha = () => {
        setCaptchaText("");
        setCaptcha(Math.random().toString(36).slice(8));
    };

    // Handle User Login
    const handleUserLogin = async (event) => {
        event.preventDefault();

        if (isCaptchaSuccess) {
            try {
                const res = await axios.post("http://localhost:8080/api/a1/users/login", {
                    username: username,
                    password: password,
                });

                if (res.data.message === "Login Success") {
                    navigate('/Home');
                } else if (res.data.message === "username not exist") {
                    alert("Username does not exist");
                } else {
                    alert("Incorrect username or password");
                }
            } catch (err) {
                console.error(err);
                alert("An error occurred during user login");
            }
        } else {
            alert("Please solve the Captcha before attempting login.");
        }
    };

    // Handle Vendor Login
    const handleVendorLogin = async (event) => {
        event.preventDefault();

        if (isCaptchaSuccess) {
            try {
                const res = await axios.post("http://localhost:8080/api/a1/vendor/login", {
                    vendorname: vendorname,
                    vendorpassword: vendorpassword,
                });

                if (res.data.message === "Login Success") {
                    navigate('/VendorHome');
                } else if (res.data.message === "vendor not exist") {
                    alert("Vendor does not exist");
                } else {
                    alert("Incorrect vendor or password");
                }
            } catch (err) {
                console.error(err);
                alert("An error occurred during vendor login");
            }
        } else {
            alert("Please solve the Captcha before attempting login.");
        }
    };

    // Handle Admin Login
    const handleAdminLogin = async (event) => {
        event.preventDefault();

        if (isCaptchaSuccess) {
            try {
                const res = await axios.post("http://localhost:8080/api/a1/admin/login", {
                    adminname: adminname,
                    adminpassword: adminpassword,
                });

                if (res.data.message === "Login Success") {
                    navigate('/AdminHome');
                } else if (res.data.message === "admin not exist") {
                    alert("Admin does not exist");
                } else {
                    alert("Incorrect admin or password");
                }
            } catch (err) {
                console.error(err);
                alert("An error occurred during admin login");
            }
        } else {
            alert("Please solve the Captcha before attempting login.");
        }
    };

    // Handle Captcha submission
    const handleCaptchaSubmit = (event) => {
        event.preventDefault();

        if (captchaText === captcha) {
            setIsCaptchaValid(false);
            setIsCaptchaSuccess(true);
        } else {
            setIsCaptchaValid(true);
            setIsCaptchaSuccess(false);
        }
    };

    return (
        <section className="bg-white dark:bg-gray-900">
            <div className="w-full mx-auto text-left md:w-11/12 xl:w-9/12 md:text-center">
                {/* ... (existing code for the title) */}
            </div>

            <div className="container px-6 py-12 mx-auto">
                <div className="lg:flex lg:items-center lg:-mx-6">
                    {/* User Login */}
                    <div className="mt-8 lg:w-1/2 lg:mx-6">
                        {/* ... (existing user login form code) */}

                        {/* Add Captcha */}
                        <Divider />
                        <CardContent>
                            <CardActions>
                                <div className="h3">{captcha}</div>
                                <Button startIcon={<RefreshIcon />} onClick={refreshCaptcha}></Button>
                            </CardActions>

                            <form onSubmit={handleCaptchaSubmit}>
                                <TextField
                                    label="Enter Captcha"
                                    focused
                                    value={captchaText}
                                    fullWidth
                                    onChange={(e) => setCaptchaText(e.target.value)}
                                    error={isCaptchaValid}
                                    helperText={isCaptchaValid && "Invalid Captcha"}
                                />

                                <Button
                                    variant="contained"
                                    color="success"
                                    type="submit"
                                    sx={{ marginTop: "20px" }}
                                >
                                    Submit
                                </Button>
                            </form>
                        </CardContent>
                    </div>

                    {/* Vendor Login */}
                    <div className="mt-8 lg:w-1/2 lg:mx-6">
                        {/* ... (existing vendor login form code) */}
                    </div>

                    {/* Admin Login */}
                    <div className="mt-8 lg:w-1/2 lg:mx-6">
                        {/* ... (existing admin login form code) */}
                    </div>
                </div>
            </div>
        </section>
    );
};

export default Login;
